
using System;
using System.Text;
using System.Data;
using System.Collections.Generic;
using System.Configuration;
using System.Runtime.Remoting;
using Softv.Entities;
using SoftvConfiguration;
using Globals;

namespace Softv.Providers
{
    /// <summary>
    /// Class                   : Softv.Providers.RelPreguntaOpcMultsProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : RelPreguntaOpcMults Provider
    /// File                    : RelPreguntaOpcMultsProvider.cs
    /// Creation date           : 27/04/2016
    /// Creation time           : 05:19 p. m.
    /// </summary>
    public abstract class RelPreguntaOpcMultsProvider : Globals.DataAccess
    {

        /// <summary>
        /// Instance of RelPreguntaOpcMults from DB
        /// </summary>
        private static RelPreguntaOpcMultsProvider _Instance = null;

        private static ObjectHandle obj;
        /// <summary>
        /// Generates a RelPreguntaOpcMults instance
        /// </summary>
        public static RelPreguntaOpcMultsProvider Instance
        {
            get
            {
                if (_Instance == null)
                {
                    obj = Activator.CreateInstance(
                    SoftvSettings.Settings.RelPreguntaOpcMults.Assembly,
                    SoftvSettings.Settings.RelPreguntaOpcMults.DataClass);
                    _Instance = (RelPreguntaOpcMultsProvider)obj.Unwrap();
                }
                return _Instance;
            }
        }

        /// <summary>
        /// Provider's default constructor
        /// </summary>
        public RelPreguntaOpcMultsProvider()
        {
        }
        /// <summary>
        /// Abstract method to add RelPreguntaOpcMults
        ///  /summary>
        /// <param name="RelPreguntaOpcMults"></param>
        /// <returns></returns>
        public abstract int AddRelPreguntaOpcMults(RelPreguntaOpcMultsEntity entity_RelPreguntaOpcMults);

        /// <summary>
        /// Abstract method to delete RelPreguntaOpcMults
        /// </summary>
        public abstract int DeleteRelPreguntaOpcMults(int? IdPregunta);

        /// <summary>
        /// Abstract method to update RelPreguntaOpcMults
        /// </summary>
        public abstract int EditRelPreguntaOpcMults(RelPreguntaOpcMultsEntity entity_RelPreguntaOpcMults);

        /// <summary>
        /// Abstract method to get all RelPreguntaOpcMults
        /// </summary>
        public abstract List<RelPreguntaOpcMultsEntity> GetRelPreguntaOpcMults();

        /// <summary>
        /// Abstract method to get all RelPreguntaOpcMults List<int> lid
        /// </summary>
        public abstract List<RelPreguntaOpcMultsEntity> GetRelPreguntaOpcMults(List<int> lid);

        /// <summary>
        /// Abstract method to get by id
        /// </summary>
        public abstract RelPreguntaOpcMultsEntity GetRelPreguntaOpcMultsById(int? IdPregunta);


        public abstract List<RelPreguntaOpcMultsEntity> GetRelPreguntaOpcMultsByIdPregunta(int? IdPregunta);

        public abstract List<RelPreguntaOpcMultsEntity> GetRelPreguntaOpcMultsById_ResOpcMult(int? Id_ResOpcMult);


        /// <summary>
        ///Get RelPreguntaOpcMults
        ///</summary>
        public abstract SoftvList<RelPreguntaOpcMultsEntity> GetPagedList(int pageIndex, int pageSize);

        /// <summary>
        ///Get RelPreguntaOpcMults
        ///</summary>
        public abstract SoftvList<RelPreguntaOpcMultsEntity> GetPagedList(int pageIndex, int pageSize, String xml);

        /// <summary>
        /// Converts data from reader to entity
        /// </summary>
        protected virtual RelPreguntaOpcMultsEntity GetRelPreguntaOpcMultsFromReader(IDataReader reader)
        {
            RelPreguntaOpcMultsEntity entity_RelPreguntaOpcMults = null;
            try
            {
                entity_RelPreguntaOpcMults = new RelPreguntaOpcMultsEntity();
                entity_RelPreguntaOpcMults.IdPregunta = (int?)(GetFromReader(reader, "IdPregunta"));
                entity_RelPreguntaOpcMults.Id_ResOpcMult = (int?)(GetFromReader(reader, "Id_ResOpcMult"));

            }
            catch (Exception ex)
            {
                throw new Exception("Error converting RelPreguntaOpcMults data to entity", ex);
            }
            return entity_RelPreguntaOpcMults;
        }

    }

    #region Customs Methods

    #endregion
}

