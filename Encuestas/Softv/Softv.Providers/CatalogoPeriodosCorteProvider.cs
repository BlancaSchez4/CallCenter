
using System;
using System.Text;
using System.Data;
using System.Collections.Generic;
using System.Configuration;
using System.Runtime.Remoting;
using Softv.Entities;
using SoftvConfiguration;
using Globals;

namespace Softv.Providers
{
    /// <summary>
    /// Class                   : Softv.Providers.CatalogoPeriodosCorteProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : CatalogoPeriodosCorte Provider
    /// File                    : CatalogoPeriodosCorteProvider.cs
    /// Creation date           : 20/05/2016
    /// Creation time           : 06:36 p. m.
    /// </summary>
    public abstract class CatalogoPeriodosCorteProvider : Globals.DataAccess
    {

        /// <summary>
        /// Instance of CatalogoPeriodosCorte from DB
        /// </summary>
        private static CatalogoPeriodosCorteProvider _Instance = null;

        private static ObjectHandle obj;
        /// <summary>
        /// Generates a CatalogoPeriodosCorte instance
        /// </summary>
        public static CatalogoPeriodosCorteProvider Instance
        {
            get
            {
                if (_Instance == null)
                {
                    obj = Activator.CreateInstance(
                    SoftvSettings.Settings.CatalogoPeriodosCorte.Assembly,
                    SoftvSettings.Settings.CatalogoPeriodosCorte.DataClass);
                    _Instance = (CatalogoPeriodosCorteProvider)obj.Unwrap();
                }
                return _Instance;
            }
        }

        /// <summary>
        /// Provider's default constructor
        /// </summary>
        public CatalogoPeriodosCorteProvider()
        {
        }
        /// <summary>
        /// Abstract method to add CatalogoPeriodosCorte
        ///  /summary>
        /// <param name="CatalogoPeriodosCorte"></param>
        /// <returns></returns>
        public abstract int AddCatalogoPeriodosCorte(CatalogoPeriodosCorteEntity entity_CatalogoPeriodosCorte);

        /// <summary>
        /// Abstract method to delete CatalogoPeriodosCorte
        /// </summary>
        public abstract int DeleteCatalogoPeriodosCorte(int? Clv_Periodo);

        /// <summary>
        /// Abstract method to update CatalogoPeriodosCorte
        /// </summary>
        public abstract int EditCatalogoPeriodosCorte(CatalogoPeriodosCorteEntity entity_CatalogoPeriodosCorte);

        /// <summary>
        /// Abstract method to get all CatalogoPeriodosCorte
        /// </summary>
        public abstract List<CatalogoPeriodosCorteEntity> GetCatalogoPeriodosCorte();

        /// <summary>
        /// Abstract method to get all CatalogoPeriodosCorte List<int> lid
        /// </summary>
        public abstract List<CatalogoPeriodosCorteEntity> GetCatalogoPeriodosCorte(List<int> lid);

        /// <summary>
        /// Abstract method to get by id
        /// </summary>
        public abstract CatalogoPeriodosCorteEntity GetCatalogoPeriodosCorteById(int? Clv_Periodo);



        /// <summary>
        ///Get CatalogoPeriodosCorte
        ///</summary>
        public abstract SoftvList<CatalogoPeriodosCorteEntity> GetPagedList(int pageIndex, int pageSize);

        /// <summary>
        ///Get CatalogoPeriodosCorte
        ///</summary>
        public abstract SoftvList<CatalogoPeriodosCorteEntity> GetPagedList(int pageIndex, int pageSize, String xml);

        /// <summary>
        /// Converts data from reader to entity
        /// </summary>
        protected virtual CatalogoPeriodosCorteEntity GetCatalogoPeriodosCorteFromReader(IDataReader reader)
        {
            CatalogoPeriodosCorteEntity entity_CatalogoPeriodosCorte = null;
            try
            {
                entity_CatalogoPeriodosCorte = new CatalogoPeriodosCorteEntity();
                entity_CatalogoPeriodosCorte.Clv_Periodo = (int?)(GetFromReader(reader, "Clv_Periodo"));
                entity_CatalogoPeriodosCorte.Descripcion = (String)(GetFromReader(reader, "Descripcion", IsString: true));
                entity_CatalogoPeriodosCorte.Habilitar = (int?)(GetFromReader(reader, "Habilitar"));

            }
            catch (Exception ex)
            {
                throw new Exception("Error converting CatalogoPeriodosCorte data to entity", ex);
            }
            return entity_CatalogoPeriodosCorte;
        }

    }

    #region Customs Methods

    #endregion
}

