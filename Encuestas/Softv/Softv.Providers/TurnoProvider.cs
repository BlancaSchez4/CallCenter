
using System;
using System.Text;
using System.Data;
using System.Collections.Generic;
using System.Configuration;
using System.Runtime.Remoting;
using Softv.Entities;
using SoftvConfiguration;
using Globals;

namespace Softv.Providers
{
    /// <summary>
    /// Class                   : Softv.Providers.TurnoProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : Turno Provider
    /// File                    : TurnoProvider.cs
    /// Creation date           : 04/05/2016
    /// Creation time           : 01:21 p. m.
    /// </summary>
    public abstract class TurnoProvider : Globals.DataAccess
    {

        /// <summary>
        /// Instance of Turno from DB
        /// </summary>
        private static TurnoProvider _Instance = null;

        private static ObjectHandle obj;
        /// <summary>
        /// Generates a Turno instance
        /// </summary>
        public static TurnoProvider Instance
        {
            get
            {
                if (_Instance == null)
                {
                    obj = Activator.CreateInstance(
                    SoftvSettings.Settings.Turno.Assembly,
                    SoftvSettings.Settings.Turno.DataClass);
                    _Instance = (TurnoProvider)obj.Unwrap();
                }
                return _Instance;
            }
        }

        /// <summary>
        /// Provider's default constructor
        /// </summary>
        public TurnoProvider()
        {
        }
        /// <summary>
        /// Abstract method to add Turno
        ///  /summary>
        /// <param name="Turno"></param>
        /// <returns></returns>
        public abstract int AddTurno(TurnoEntity entity_Turno);

        /// <summary>
        /// Abstract method to delete Turno
        /// </summary>
        public abstract int DeleteTurno(int? IdTurno);

        /// <summary>
        /// Abstract method to update Turno
        /// </summary>
        public abstract int EditTurno(TurnoEntity entity_Turno);

        /// <summary>
        /// Abstract method to get all Turno
        /// </summary>
        public abstract List<TurnoEntity> GetTurno();

        /// <summary>
        /// Abstract method to get all Turno List<int> lid
        /// </summary>
        public abstract List<TurnoEntity> GetTurno(List<int> lid);

        /// <summary>
        /// Abstract method to get by id
        /// </summary>
        public abstract TurnoEntity GetTurnoById(int? IdTurno);


        public abstract List<TurnoEntity> GetTurnoByIdTurno(int? IdTurno);


        /// <summary>
        ///Get Turno
        ///</summary>
        public abstract SoftvList<TurnoEntity> GetPagedList(int pageIndex, int pageSize);

        /// <summary>
        ///Get Turno
        ///</summary>
        public abstract SoftvList<TurnoEntity> GetPagedList(int pageIndex, int pageSize, String xml);

        /// <summary>
        /// Converts data from reader to entity
        /// </summary>
        protected virtual TurnoEntity GetTurnoFromReader(IDataReader reader)
        {
            TurnoEntity entity_Turno = null;
            try
            {
                entity_Turno = new TurnoEntity();
                entity_Turno.IdTurno = (int?)(GetFromReader(reader, "IdTurno"));
                entity_Turno.Turno = (String)(GetFromReader(reader, "Turno", IsString: true));

            }
            catch (Exception ex)
            {
                throw new Exception("Error converting Turno data to entity", ex);
            }
            return entity_Turno;
        }

    }

    #region Customs Methods

    #endregion
}

