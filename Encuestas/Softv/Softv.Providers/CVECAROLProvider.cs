
using System;
using System.Text;
using System.Data;
using System.Collections.Generic;
using System.Configuration;
using System.Runtime.Remoting;
using Softv.Entities;
using SoftvConfiguration;
using Globals;

namespace Softv.Providers
{
    /// <summary>
    /// Class                   : Softv.Providers.CVECAROLProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : CVECAROL Provider
    /// File                    : CVECAROLProvider.cs
    /// Creation date           : 20/05/2016
    /// Creation time           : 06:39 p. m.
    /// </summary>
    public abstract class CVECAROLProvider : Globals.DataAccess
    {

        /// <summary>
        /// Instance of CVECAROL from DB
        /// </summary>
        private static CVECAROLProvider _Instance = null;

        private static ObjectHandle obj;
        /// <summary>
        /// Generates a CVECAROL instance
        /// </summary>
        public static CVECAROLProvider Instance
        {
            get
            {
                if (_Instance == null)
                {
                    obj = Activator.CreateInstance(
                    SoftvSettings.Settings.CVECAROL.Assembly,
                    SoftvSettings.Settings.CVECAROL.DataClass);
                    _Instance = (CVECAROLProvider)obj.Unwrap();
                }
                return _Instance;
            }
        }

        /// <summary>
        /// Provider's default constructor
        /// </summary>
        public CVECAROLProvider()
        {
        }
        /// <summary>
        /// Abstract method to add CVECAROL
        ///  /summary>
        /// <param name="CVECAROL"></param>
        /// <returns></returns>
        public abstract int AddCVECAROL(CVECAROLEntity entity_CVECAROL);

        /// <summary>
        /// Abstract method to delete CVECAROL
        /// </summary>
        public abstract int DeleteCVECAROL(int? Clv_Colonia);

        /// <summary>
        /// Abstract method to update CVECAROL
        /// </summary>
        public abstract int EditCVECAROL(CVECAROLEntity entity_CVECAROL);

        /// <summary>
        /// Abstract method to get all CVECAROL
        /// </summary>
        public abstract List<CVECAROLEntity> GetCVECAROL();

        /// <summary>
        /// Abstract method to get all CVECAROL List<int> lid
        /// </summary>
        public abstract List<CVECAROLEntity> GetCVECAROL(List<int> lid);

        /// <summary>
        /// Abstract method to get by id
        /// </summary>
        public abstract CVECAROLEntity GetCVECAROLById(int? Clv_Colonia);

        public abstract CVECAROLEntity GetCVECAROLByCalle(int? Clv_Calle);

        public abstract CVECAROLEntity GetCVECAROLByColonia(int? Clv_Colonia);


        public abstract List<CVECAROLEntity> GetCVECAROLByClv_Calle(int? Clv_Calle);

        public abstract List<CVECAROLEntity> GetCVECAROLByClv_Colonia(int? Clv_Colonia);


        /// <summary>
        ///Get CVECAROL
        ///</summary>
        public abstract SoftvList<CVECAROLEntity> GetPagedList(int pageIndex, int pageSize);

        /// <summary>
        ///Get CVECAROL
        ///</summary>
        public abstract SoftvList<CVECAROLEntity> GetPagedList(int pageIndex, int pageSize, String xml);

        /// <summary>
        /// Converts data from reader to entity
        /// </summary>
        protected virtual CVECAROLEntity GetCVECAROLFromReader(IDataReader reader)
        {
            CVECAROLEntity entity_CVECAROL = null;
            try
            {
                entity_CVECAROL = new CVECAROLEntity();
                entity_CVECAROL.Clv_Calle = (int?)(GetFromReader(reader, "Clv_Calle"));
                entity_CVECAROL.Clv_Colonia = (int?)(GetFromReader(reader, "Clv_Colonia"));
                entity_CVECAROL.NumCasas = (int?)(GetFromReader(reader, "NumCasas"));
                entity_CVECAROL.NumNegocios = (int?)(GetFromReader(reader, "NumNegocios"));
                entity_CVECAROL.NumBaldios = (int?)(GetFromReader(reader, "NumBaldios"));
                entity_CVECAROL.Sector = (char)(GetFromReader(reader, "Sector"));
                entity_CVECAROL.Troncal = (char)(GetFromReader(reader, "Troncal"));

            }
            catch (Exception ex)
            {
                throw new Exception("Error converting CVECAROL data to entity", ex);
            }
            return entity_CVECAROL;
        }

    }

    #region Customs Methods

    #endregion
}

