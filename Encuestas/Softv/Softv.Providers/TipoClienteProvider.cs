
    using System;
    using System.Text;
    using System.Data;
    using System.Collections.Generic;
    using System.Configuration;
    using System.Runtime.Remoting;
    using Softv.Entities;
    using SoftvConfiguration;
    using Globals;

    namespace Softv.Providers
    {
    /// <summary>
    /// Class                   : Softv.Providers.TipoClienteProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : TipoCliente Provider
    /// File                    : TipoClienteProvider.cs
    /// Creation date           : 04/05/2016
    /// Creation time           : 01:29 p. m.
    /// </summary>
    public abstract class TipoClienteProvider : Globals.DataAccess
    {

    /// <summary>
    /// Instance of TipoCliente from DB
    /// </summary>
    private static TipoClienteProvider _Instance = null;

    private static ObjectHandle obj;
    /// <summary>
    /// Generates a TipoCliente instance
    /// </summary>
    public static TipoClienteProvider Instance
    {
    get
    {
    if (_Instance == null)
    {
    obj = Activator.CreateInstance(
    SoftvSettings.Settings.TipoCliente.Assembly,
    SoftvSettings.Settings.TipoCliente.DataClass);
    _Instance = (TipoClienteProvider)obj.Unwrap();
    }
    return _Instance;
    }
    }

    /// <summary>
    /// Provider's default constructor
    /// </summary>
    public TipoClienteProvider()
    {
    }
    /// <summary>
    /// Abstract method to add TipoCliente
    ///  /summary>
    /// <param name="TipoCliente"></param>
    /// <returns></returns>
    public abstract int AddTipoCliente(TipoClienteEntity entity_TipoCliente);

    /// <summary>
    /// Abstract method to delete TipoCliente
    /// </summary>
    public abstract int DeleteTipoCliente(int? Clv_TipoCliente);

    /// <summary>
    /// Abstract method to update TipoCliente
    /// </summary>
    public abstract int EditTipoCliente(TipoClienteEntity entity_TipoCliente);

    /// <summary>
    /// Abstract method to get all TipoCliente
    /// </summary>
    public abstract List<TipoClienteEntity> GetTipoCliente();

    /// <summary>
    /// Abstract method to get all TipoCliente List<int> lid
    /// </summary>
    public abstract List<TipoClienteEntity> GetTipoCliente(List<int> lid);

    /// <summary>
    /// Abstract method to get by id
    /// </summary>
    public abstract TipoClienteEntity GetTipoClienteById(int? Clv_TipoCliente);

    
          public abstract List<TipoClienteEntity> GetTipoClienteByClv_TipoCliente(int? Clv_TipoCliente);          
        

    /// <summary>
    ///Get TipoCliente
    ///</summary>
    public abstract SoftvList<TipoClienteEntity> GetPagedList(int pageIndex, int pageSize);

    /// <summary>
    ///Get TipoCliente
    ///</summary>
    public abstract SoftvList<TipoClienteEntity> GetPagedList(int pageIndex, int pageSize,String xml);

    /// <summary>
    /// Converts data from reader to entity
    /// </summary>
    protected virtual TipoClienteEntity GetTipoClienteFromReader(IDataReader reader)
    {
    TipoClienteEntity entity_TipoCliente = null;
    try
    {
      entity_TipoCliente = new TipoClienteEntity();
    entity_TipoCliente.Clv_TipoCliente = (int?)(GetFromReader(reader,"Clv_TipoCliente"));
          entity_TipoCliente.Descripcion = (String)(GetFromReader(reader,"Descripcion", IsString : true));
        
    }
    catch (Exception ex)
    {
    throw new Exception("Error converting TipoCliente data to entity", ex);
    }
    return entity_TipoCliente;
    }
    
    }

    #region Customs Methods
    
    #endregion
    }

  