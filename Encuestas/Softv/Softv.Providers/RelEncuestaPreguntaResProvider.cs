
using System;
using System.Text;
using System.Data;
using System.Collections.Generic;
using System.Configuration;
using System.Runtime.Remoting;
using Softv.Entities;
using SoftvConfiguration;
using Globals;

namespace Softv.Providers
{
    /// <summary>
    /// Class                   : Softv.Providers.RelEncuestaPreguntaResProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : RelEncuestaPreguntaRes Provider
    /// File                    : RelEncuestaPreguntaResProvider.cs
    /// Creation date           : 20/05/2016
    /// Creation time           : 06:38 p. m.
    /// </summary>
    public abstract class RelEncuestaPreguntaResProvider : Globals.DataAccess
    {

        /// <summary>
        /// Instance of RelEncuestaPreguntaRes from DB
        /// </summary>
        private static RelEncuestaPreguntaResProvider _Instance = null;

        private static ObjectHandle obj;
        /// <summary>
        /// Generates a RelEncuestaPreguntaRes instance
        /// </summary>
        public static RelEncuestaPreguntaResProvider Instance
        {
            get
            {
                if (_Instance == null)
                {
                    obj = Activator.CreateInstance(
                    SoftvSettings.Settings.RelEncuestaPreguntaRes.Assembly,
                    SoftvSettings.Settings.RelEncuestaPreguntaRes.DataClass);
                    _Instance = (RelEncuestaPreguntaResProvider)obj.Unwrap();
                }
                return _Instance;
            }
        }

        /// <summary>
        /// Provider's default constructor
        /// </summary>
        public RelEncuestaPreguntaResProvider()
        {
        }
        /// <summary>
        /// Abstract method to add RelEncuestaPreguntaRes
        ///  /summary>
        /// <param name="RelEncuestaPreguntaRes"></param>
        /// <returns></returns>
        public abstract int AddRelEncuestaPreguntaRes(RelEncuestaPreguntaResEntity entity_RelEncuestaPreguntaRes);

        /// <summary>
        /// Abstract method to delete RelEncuestaPreguntaRes
        /// </summary>
        public abstract int DeleteRelEncuestaPreguntaRes(int? Id);

        /// <summary>
        /// Abstract method to update RelEncuestaPreguntaRes
        /// </summary>
        public abstract int EditRelEncuestaPreguntaRes(RelEncuestaPreguntaResEntity entity_RelEncuestaPreguntaRes);

        /// <summary>
        /// Abstract method to get all RelEncuestaPreguntaRes
        /// </summary>
        public abstract List<RelEncuestaPreguntaResEntity> GetRelEncuestaPreguntaRes();

        /// <summary>
        /// Abstract method to get all RelEncuestaPreguntaRes List<int> lid
        /// </summary>
        public abstract List<RelEncuestaPreguntaResEntity> GetRelEncuestaPreguntaRes(List<int> lid);

        /// <summary>
        /// Abstract method to get by id
        /// </summary>
        public abstract RelEncuestaPreguntaResEntity GetRelEncuestaPreguntaResById(int? Id);


        public abstract List<RelEncuestaPreguntaResEntity> GetRelEncuestaPreguntaResByIdEncuesta(int? IdEncuesta);

        public abstract List<RelEncuestaPreguntaResEntity> GetRelEncuestaPreguntaResByIdPregunta(int? IdPregunta);

        public abstract List<RelEncuestaPreguntaResEntity> GetRelEncuestaPreguntaResById_ResOpcMult(int? Id_ResOpcMult);


        /// <summary>
        ///Get RelEncuestaPreguntaRes
        ///</summary>
        public abstract SoftvList<RelEncuestaPreguntaResEntity> GetPagedList(int pageIndex, int pageSize);

        /// <summary>
        ///Get RelEncuestaPreguntaRes
        ///</summary>
        public abstract SoftvList<RelEncuestaPreguntaResEntity> GetPagedList(int pageIndex, int pageSize, String xml);

        /// <summary>
        /// Converts data from reader to entity
        /// </summary>
        protected virtual RelEncuestaPreguntaResEntity GetRelEncuestaPreguntaResFromReader(IDataReader reader)
        {
            RelEncuestaPreguntaResEntity entity_RelEncuestaPreguntaRes = null;
            try
            {
                entity_RelEncuestaPreguntaRes = new RelEncuestaPreguntaResEntity();
                entity_RelEncuestaPreguntaRes.Id = (int?)(GetFromReader(reader, "Id"));
                entity_RelEncuestaPreguntaRes.IdEncuesta = (int?)(GetFromReader(reader, "IdEncuesta"));
                entity_RelEncuestaPreguntaRes.IdPregunta = (int?)(GetFromReader(reader, "IdPregunta"));
                entity_RelEncuestaPreguntaRes.Id_ResOpcMult = (int?)(GetFromReader(reader, "Id_ResOpcMult"));

            }
            catch (Exception ex)
            {
                throw new Exception("Error converting RelEncuestaPreguntaRes data to entity", ex);
            }
            return entity_RelEncuestaPreguntaRes;
        }

    }

    #region Customs Methods

    #endregion
}

