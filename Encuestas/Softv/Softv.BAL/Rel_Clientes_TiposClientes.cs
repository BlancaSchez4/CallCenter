
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.ComponentModel;
using System.Linq;
using Softv.Providers;
using Softv.Entities;
using Globals;

/// <summary>
/// Class                   : Softv.BAL.Client.cs
/// Generated by            : Class Generator (c) 2014
/// Description             : Rel_Clientes_TiposClientesBussines
/// File                    : Rel_Clientes_TiposClientesBussines.cs
/// Creation date           : 04/05/2016
/// Creation time           : 05:56 p. m.
///</summary>
namespace Softv.BAL
{

    [DataObject]
    [Serializable]
    public class Rel_Clientes_TiposClientes
    {

        #region Constructors
        public Rel_Clientes_TiposClientes() { }
        #endregion

        /// <summary>
        ///Adds Rel_Clientes_TiposClientes
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public static int Add(Rel_Clientes_TiposClientesEntity objRel_Clientes_TiposClientes)
        {
            int result = ProviderSoftv.Rel_Clientes_TiposClientes.AddRel_Clientes_TiposClientes(objRel_Clientes_TiposClientes);
            return result;
        }

        /// <summary>
        ///Delete Rel_Clientes_TiposClientes
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public static int Delete(long? CONTRATO)
        {
            int resultado = ProviderSoftv.Rel_Clientes_TiposClientes.DeleteRel_Clientes_TiposClientes(CONTRATO);
            return resultado;
        }

        /// <summary>
        ///Update Rel_Clientes_TiposClientes
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public static int Edit(Rel_Clientes_TiposClientesEntity objRel_Clientes_TiposClientes)
        {
            int result = ProviderSoftv.Rel_Clientes_TiposClientes.EditRel_Clientes_TiposClientes(objRel_Clientes_TiposClientes);
            return result;
        }

        /// <summary>
        ///Get Rel_Clientes_TiposClientes
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static List<Rel_Clientes_TiposClientesEntity> GetAll()
        {
            List<Rel_Clientes_TiposClientesEntity> entities = new List<Rel_Clientes_TiposClientesEntity>();
            entities = ProviderSoftv.Rel_Clientes_TiposClientes.GetRel_Clientes_TiposClientes();

            List<TipoClienteEntity> lTipoCliente = ProviderSoftv.TipoCliente.GetTipoCliente(entities.Where(x => x.Clv_TipoCliente.HasValue).Select(x => x.Clv_TipoCliente.Value).ToList());
            lTipoCliente.ForEach(XTipoCliente => entities.Where(x => x.Clv_TipoCliente.HasValue).Where(x => x.Clv_TipoCliente == XTipoCliente.Clv_TipoCliente).ToList().ForEach(y => y.TipoCliente = XTipoCliente));

            return entities ?? new List<Rel_Clientes_TiposClientesEntity>();
        }

        /// <summary>
        ///Get Rel_Clientes_TiposClientes List<lid>
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static List<Rel_Clientes_TiposClientesEntity> GetAll(List<int> lid)
        {
            List<Rel_Clientes_TiposClientesEntity> entities = new List<Rel_Clientes_TiposClientesEntity>();
            entities = ProviderSoftv.Rel_Clientes_TiposClientes.GetRel_Clientes_TiposClientes(lid);
            return entities ?? new List<Rel_Clientes_TiposClientesEntity>();
        }

        /// <summary>
        ///Get Rel_Clientes_TiposClientes By Id
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select)]
        public static Rel_Clientes_TiposClientesEntity GetOne(long? CONTRATO)
        {
            Rel_Clientes_TiposClientesEntity result = ProviderSoftv.Rel_Clientes_TiposClientes.GetRel_Clientes_TiposClientesById(CONTRATO);

            if (result.Clv_TipoCliente != null)
                result.TipoCliente = ProviderSoftv.TipoCliente.GetTipoClienteById(result.Clv_TipoCliente);

            return result;
        }

        /// <summary>
        ///Get Rel_Clientes_TiposClientes By Id
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select)]
        public static Rel_Clientes_TiposClientesEntity GetOneDeep(long? CONTRATO)
        {
            Rel_Clientes_TiposClientesEntity result = ProviderSoftv.Rel_Clientes_TiposClientes.GetRel_Clientes_TiposClientesById(CONTRATO);

            if (result.Clv_TipoCliente != null)
                result.TipoCliente = ProviderSoftv.TipoCliente.GetTipoClienteById(result.Clv_TipoCliente);

            return result;
        }

        public static List<Rel_Clientes_TiposClientesEntity> GetRel_Clientes_TiposClientesByClv_TipoCliente(int? Clv_TipoCliente)
        {
            List<Rel_Clientes_TiposClientesEntity> entities = new List<Rel_Clientes_TiposClientesEntity>();
            entities = ProviderSoftv.Rel_Clientes_TiposClientes.GetRel_Clientes_TiposClientesByClv_TipoCliente(Clv_TipoCliente);
            return entities ?? new List<Rel_Clientes_TiposClientesEntity>();
        }



        /// <summary>
        ///Get Rel_Clientes_TiposClientes
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static SoftvList<Rel_Clientes_TiposClientesEntity> GetPagedList(int pageIndex, int pageSize)
        {
            SoftvList<Rel_Clientes_TiposClientesEntity> entities = new SoftvList<Rel_Clientes_TiposClientesEntity>();
            entities = ProviderSoftv.Rel_Clientes_TiposClientes.GetPagedList(pageIndex, pageSize);

            List<TipoClienteEntity> lTipoCliente = ProviderSoftv.TipoCliente.GetTipoCliente(entities.Where(x => x.Clv_TipoCliente.HasValue).Select(x => x.Clv_TipoCliente.Value).Distinct().ToList());
            lTipoCliente.ForEach(XTipoCliente => entities.Where(x => x.Clv_TipoCliente.HasValue).Where(x => x.Clv_TipoCliente == XTipoCliente.Clv_TipoCliente).ToList().ForEach(y => y.TipoCliente = XTipoCliente));

            return entities ?? new SoftvList<Rel_Clientes_TiposClientesEntity>();
        }

        /// <summary>
        ///Get Rel_Clientes_TiposClientes
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static SoftvList<Rel_Clientes_TiposClientesEntity> GetPagedList(int pageIndex, int pageSize, String xml)
        {
            SoftvList<Rel_Clientes_TiposClientesEntity> entities = new SoftvList<Rel_Clientes_TiposClientesEntity>();
            entities = ProviderSoftv.Rel_Clientes_TiposClientes.GetPagedList(pageIndex, pageSize, xml);

            List<TipoClienteEntity> lTipoCliente = ProviderSoftv.TipoCliente.GetTipoCliente(entities.Where(x => x.Clv_TipoCliente.HasValue).Select(x => x.Clv_TipoCliente.Value).Distinct().ToList());
            lTipoCliente.ForEach(XTipoCliente => entities.Where(x => x.Clv_TipoCliente.HasValue).Where(x => x.Clv_TipoCliente == XTipoCliente.Clv_TipoCliente).ToList().ForEach(y => y.TipoCliente = XTipoCliente));

            return entities ?? new SoftvList<Rel_Clientes_TiposClientesEntity>();
        }


    }




    #region Customs Methods

    #endregion
}
