
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.ComponentModel;
using System.Linq;
using Softv.Providers;
using Softv.Entities;
using Globals;

/// <summary>
/// Class                   : Softv.BAL.Client.cs
/// Generated by            : Class Generator (c) 2014
/// Description             : CVECOLCIUBussines
/// File                    : CVECOLCIUBussines.cs
/// Creation date           : 20/05/2016
/// Creation time           : 06:39 p. m.
///</summary>
namespace Softv.BAL
{

    [DataObject]
    [Serializable]
    public class CVECOLCIU
    {

        #region Constructors
        public CVECOLCIU() { }
        #endregion

        /// <summary>
        ///Adds CVECOLCIU
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public static int Add(CVECOLCIUEntity objCVECOLCIU)
        {
            int result = ProviderSoftv.CVECOLCIU.AddCVECOLCIU(objCVECOLCIU);
            return result;
        }

        /// <summary>
        ///Delete CVECOLCIU
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public static int Delete(int? Clv_Ciudad)
        {
            int resultado = ProviderSoftv.CVECOLCIU.DeleteCVECOLCIU(Clv_Ciudad);
            return resultado;
        }

        /// <summary>
        ///Update CVECOLCIU
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public static int Edit(CVECOLCIUEntity objCVECOLCIU)
        {
            int result = ProviderSoftv.CVECOLCIU.EditCVECOLCIU(objCVECOLCIU);
            return result;
        }

        /// <summary>
        ///Get CVECOLCIU
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static List<CVECOLCIUEntity> GetAll()
        {
            List<CVECOLCIUEntity> entities = new List<CVECOLCIUEntity>();
            entities = ProviderSoftv.CVECOLCIU.GetCVECOLCIU();

            List<COLONIAEntity> lCOLONIA = ProviderSoftv.COLONIA.GetCOLONIA(entities.Where(x => x.Clv_Colonia.HasValue).Select(x => x.Clv_Colonia.Value).ToList());
            lCOLONIA.ForEach(XCOLONIA => entities.Where(x => x.Clv_Colonia.HasValue).Where(x => x.Clv_Colonia == XCOLONIA.Clv_Colonia).ToList().ForEach(y => y.COLONIA = XCOLONIA));

            List<CIUDADEntity> lCIUDAD = ProviderSoftv.CIUDAD.GetCIUDAD(entities.Where(x => x.Clv_Ciudad.HasValue).Select(x => x.Clv_Ciudad.Value).ToList());
            lCIUDAD.ForEach(XCIUDAD => entities.Where(x => x.Clv_Ciudad.HasValue).Where(x => x.Clv_Ciudad == XCIUDAD.Clv_Ciudad).ToList().ForEach(y => y.CIUDAD = XCIUDAD));

            return entities ?? new List<CVECOLCIUEntity>();
        }

        /// <summary>
        ///Get CVECOLCIU List<lid>
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static List<CVECOLCIUEntity> GetAll(List<int> lid)
        {
            List<CVECOLCIUEntity> entities = new List<CVECOLCIUEntity>();
            entities = ProviderSoftv.CVECOLCIU.GetCVECOLCIU(lid);
            return entities ?? new List<CVECOLCIUEntity>();
        }

        /// <summary>
        ///Get CVECOLCIU By Id
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select)]
        public static CVECOLCIUEntity GetOne(int? Clv_Ciudad)
        {
            CVECOLCIUEntity result = ProviderSoftv.CVECOLCIU.GetCVECOLCIUById(Clv_Ciudad);

            if (result.Clv_Colonia != null)
                result.COLONIA = ProviderSoftv.COLONIA.GetCOLONIAById(result.Clv_Colonia);

            if (result.Clv_Ciudad != null)
                result.CIUDAD = ProviderSoftv.CIUDAD.GetCIUDADById(result.Clv_Ciudad);

            return result;
        }

        /// <summary>
        ///Get CVECOLCIU By Id
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select)]
        public static CVECOLCIUEntity GetOneDeep(int? Clv_Colonia, int? Clv_Ciudad)
        {
            CVECOLCIUEntity result = ProviderSoftv.CVECOLCIU.GetCVECOLCIUById(Clv_Ciudad);

            if (result.Clv_Colonia != null)
                result.COLONIA = ProviderSoftv.COLONIA.GetCOLONIAById(result.Clv_Colonia);

            if (result.Clv_Ciudad != null)
                result.CIUDAD = ProviderSoftv.CIUDAD.GetCIUDADById(result.Clv_Ciudad);

            return result;
        }

        public static List<CVECOLCIUEntity> GetCVECOLCIUByClv_Colonia(int? Clv_Colonia)
        {
            List<CVECOLCIUEntity> entities = new List<CVECOLCIUEntity>();
            entities = ProviderSoftv.CVECOLCIU.GetCVECOLCIUByClv_Colonia(Clv_Colonia);
            return entities ?? new List<CVECOLCIUEntity>();
        }

        public static List<CVECOLCIUEntity> GetCVECOLCIUByClv_Ciudad(int? Clv_Ciudad)
        {
            List<CVECOLCIUEntity> entities = new List<CVECOLCIUEntity>();
            entities = ProviderSoftv.CVECOLCIU.GetCVECOLCIUByClv_Ciudad(Clv_Ciudad);
            return entities ?? new List<CVECOLCIUEntity>();
        }



        /// <summary>
        ///Get CVECOLCIU
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static SoftvList<CVECOLCIUEntity> GetPagedList(int pageIndex, int pageSize)
        {
            SoftvList<CVECOLCIUEntity> entities = new SoftvList<CVECOLCIUEntity>();
            entities = ProviderSoftv.CVECOLCIU.GetPagedList(pageIndex, pageSize);

            List<COLONIAEntity> lCOLONIA = ProviderSoftv.COLONIA.GetCOLONIA(entities.Where(x => x.Clv_Colonia.HasValue).Select(x => x.Clv_Colonia.Value).Distinct().ToList());
            lCOLONIA.ForEach(XCOLONIA => entities.Where(x => x.Clv_Colonia.HasValue).Where(x => x.Clv_Colonia == XCOLONIA.Clv_Colonia).ToList().ForEach(y => y.COLONIA = XCOLONIA));

            List<CIUDADEntity> lCIUDAD = ProviderSoftv.CIUDAD.GetCIUDAD(entities.Where(x => x.Clv_Ciudad.HasValue).Select(x => x.Clv_Ciudad.Value).Distinct().ToList());
            lCIUDAD.ForEach(XCIUDAD => entities.Where(x => x.Clv_Ciudad.HasValue).Where(x => x.Clv_Ciudad == XCIUDAD.Clv_Ciudad).ToList().ForEach(y => y.CIUDAD = XCIUDAD));

            return entities ?? new SoftvList<CVECOLCIUEntity>();
        }

        /// <summary>
        ///Get CVECOLCIU
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static SoftvList<CVECOLCIUEntity> GetPagedList(int pageIndex, int pageSize, String xml)
        {
            SoftvList<CVECOLCIUEntity> entities = new SoftvList<CVECOLCIUEntity>();
            entities = ProviderSoftv.CVECOLCIU.GetPagedList(pageIndex, pageSize, xml);

            List<COLONIAEntity> lCOLONIA = ProviderSoftv.COLONIA.GetCOLONIA(entities.Where(x => x.Clv_Colonia.HasValue).Select(x => x.Clv_Colonia.Value).Distinct().ToList());
            lCOLONIA.ForEach(XCOLONIA => entities.Where(x => x.Clv_Colonia.HasValue).Where(x => x.Clv_Colonia == XCOLONIA.Clv_Colonia).ToList().ForEach(y => y.COLONIA = XCOLONIA));

            List<CIUDADEntity> lCIUDAD = ProviderSoftv.CIUDAD.GetCIUDAD(entities.Where(x => x.Clv_Ciudad.HasValue).Select(x => x.Clv_Ciudad.Value).Distinct().ToList());
            lCIUDAD.ForEach(XCIUDAD => entities.Where(x => x.Clv_Ciudad.HasValue).Where(x => x.Clv_Ciudad == XCIUDAD.Clv_Ciudad).ToList().ForEach(y => y.CIUDAD = XCIUDAD));

            return entities ?? new SoftvList<CVECOLCIUEntity>();
        }


    }




    #region Customs Methods

    #endregion
}
