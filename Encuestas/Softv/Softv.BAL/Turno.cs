
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.ComponentModel;
using System.Linq;
using Softv.Providers;
using Softv.Entities;
using Globals;

/// <summary>
/// Class                   : Softv.BAL.Client.cs
/// Generated by            : Class Generator (c) 2014
/// Description             : TurnoBussines
/// File                    : TurnoBussines.cs
/// Creation date           : 04/05/2016
/// Creation time           : 01:21 p. m.
///</summary>
namespace Softv.BAL
{

    [DataObject]
    [Serializable]
    public class Turno
    {

        #region Constructors
        public Turno() { }
        #endregion

        /// <summary>
        ///Adds Turno
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public static int Add(TurnoEntity objTurno)
        {
            int result = ProviderSoftv.Turno.AddTurno(objTurno);
            return result;
        }

        /// <summary>
        ///Delete Turno
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public static int Delete(int? IdTurno)
        {
            int resultado = ProviderSoftv.Turno.DeleteTurno(IdTurno);
            return resultado;
        }

        /// <summary>
        ///Update Turno
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public static int Edit(TurnoEntity objTurno)
        {
            int result = ProviderSoftv.Turno.EditTurno(objTurno);
            return result;
        }

        /// <summary>
        ///Get Turno
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static List<TurnoEntity> GetAll()
        {
            List<TurnoEntity> entities = new List<TurnoEntity>();
            entities = ProviderSoftv.Turno.GetTurno();

            List<LlamadaEntity> lLlamada = ProviderSoftv.Llamada.GetLlamada(entities.Where(x => x.IdTurno.HasValue).Select(x => x.IdTurno.Value).ToList());
            lLlamada.ForEach(XLlamada => entities.Where(x => x.IdTurno.HasValue).Where(x => x.IdTurno == XLlamada.IdTurno).ToList().ForEach(y => y.Llamada = XLlamada));

            return entities ?? new List<TurnoEntity>();
        }

        /// <summary>
        ///Get Turno List<lid>
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static List<TurnoEntity> GetAll(List<int> lid)
        {
            List<TurnoEntity> entities = new List<TurnoEntity>();
            entities = ProviderSoftv.Turno.GetTurno(lid);
            return entities ?? new List<TurnoEntity>();
        }

        /// <summary>
        ///Get Turno By Id
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select)]
        public static TurnoEntity GetOne(int? IdTurno)
        {
            TurnoEntity result = ProviderSoftv.Turno.GetTurnoById(IdTurno);

            if (result.IdTurno != null)
                result.Llamada = ProviderSoftv.Llamada.GetLlamadaById(result.IdTurno);

            return result;
        }

        /// <summary>
        ///Get Turno By Id
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select)]
        public static TurnoEntity GetOneDeep(int? IdTurno)
        {
            TurnoEntity result = ProviderSoftv.Turno.GetTurnoById(IdTurno);

            if (result.IdTurno != null)
                result.Llamada = ProviderSoftv.Llamada.GetLlamadaById(result.IdTurno);

            return result;
        }

        public static List<TurnoEntity> GetTurnoByIdTurno(int? IdTurno)
        {
            List<TurnoEntity> entities = new List<TurnoEntity>();
            entities = ProviderSoftv.Turno.GetTurnoByIdTurno(IdTurno);
            return entities ?? new List<TurnoEntity>();
        }



        /// <summary>
        ///Get Turno
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static SoftvList<TurnoEntity> GetPagedList(int pageIndex, int pageSize)
        {
            SoftvList<TurnoEntity> entities = new SoftvList<TurnoEntity>();
            entities = ProviderSoftv.Turno.GetPagedList(pageIndex, pageSize);

            List<LlamadaEntity> lLlamada = ProviderSoftv.Llamada.GetLlamada(entities.Where(x => x.IdTurno.HasValue).Select(x => x.IdTurno.Value).Distinct().ToList());
            lLlamada.ForEach(XLlamada => entities.Where(x => x.IdTurno.HasValue).Where(x => x.IdTurno == XLlamada.IdTurno).ToList().ForEach(y => y.Llamada = XLlamada));

            return entities ?? new SoftvList<TurnoEntity>();
        }

        /// <summary>
        ///Get Turno
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static SoftvList<TurnoEntity> GetPagedList(int pageIndex, int pageSize, String xml)
        {
            SoftvList<TurnoEntity> entities = new SoftvList<TurnoEntity>();
            entities = ProviderSoftv.Turno.GetPagedList(pageIndex, pageSize, xml);

            List<LlamadaEntity> lLlamada = ProviderSoftv.Llamada.GetLlamada(entities.Where(x => x.IdTurno.HasValue).Select(x => x.IdTurno.Value).Distinct().ToList());
            lLlamada.ForEach(XLlamada => entities.Where(x => x.IdTurno.HasValue).Where(x => x.IdTurno == XLlamada.IdTurno).ToList().ForEach(y => y.Llamada = XLlamada));

            return entities ?? new SoftvList<TurnoEntity>();
        }


    }




    #region Customs Methods

    #endregion
}
