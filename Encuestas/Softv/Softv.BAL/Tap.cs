
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Data;
    using System.ComponentModel;
    using System.Linq;
    using Softv.Providers;
    using Softv.Entities;
    using Globals;

    /// <summary>
    /// Class                   : Softv.BAL.Client.cs
    /// Generated by            : Class Generator (c) 2014
    /// Description             : TapBussines
    /// File                    : TapBussines.cs
    /// Creation date           : 04/05/2016
    /// Creation time           : 01:31 p. m.
    ///</summary>
    namespace Softv.BAL
    {

    [DataObject]
    [Serializable]
    public class Tap
    {

    #region Constructors
    public Tap(){}
    #endregion

    /// <summary>
    ///Adds Tap
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Insert, true)]
    public static int Add(TapEntity objTap)
  {
  int result = ProviderSoftv.Tap.AddTap(objTap);
    return result;
    }

    /// <summary>
    ///Delete Tap
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Delete, true)]
    public static int Delete(int? IdTap)
    {
    int resultado = ProviderSoftv.Tap.DeleteTap(IdTap);
    return resultado;
    }

    /// <summary>
    ///Update Tap
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Update, true)]
    public static int Edit(TapEntity objTap)
    {
    int result = ProviderSoftv.Tap.EditTap(objTap);
    return result;
    }

    /// <summary>
    ///Get Tap
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Select, true)]
    public static List<TapEntity> GetAll()
    {
    List<TapEntity> entities = new List<TapEntity> ();
    entities = ProviderSoftv.Tap.GetTap();
    
    return entities ?? new List<TapEntity>();
    }

    /// <summary>
    ///Get Tap List<lid>
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Select, true)]
    public static List<TapEntity> GetAll(List<int> lid)
    {
    List<TapEntity> entities = new List<TapEntity> ();
    entities = ProviderSoftv.Tap.GetTap(lid);    
    return entities ?? new List<TapEntity>();
    }

    /// <summary>
    ///Get Tap By Id
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Select)]
    public static TapEntity GetOne(int? IdTap)
    {
    TapEntity result = ProviderSoftv.Tap.GetTapById(IdTap);
    
    return result;
    }

    /// <summary>
    ///Get Tap By Id
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Select)]
    public static TapEntity GetOneDeep(int? IdTap)
    {
    TapEntity result = ProviderSoftv.Tap.GetTapById(IdTap);
    
    return result;
    }
    

    
      /// <summary>
      ///Get Tap
      ///</summary>
    [DataObjectMethod(DataObjectMethodType.Select, true)]
    public static SoftvList<TapEntity> GetPagedList(int pageIndex, int pageSize)
    {
    SoftvList<TapEntity> entities = new SoftvList<TapEntity>();
    entities = ProviderSoftv.Tap.GetPagedList(pageIndex, pageSize);
    
    return entities ?? new SoftvList<TapEntity>();
    }

    /// <summary>
    ///Get Tap
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Select, true)]
    public static SoftvList<TapEntity> GetPagedList(int pageIndex, int pageSize,String xml)
    {
    SoftvList<TapEntity> entities = new SoftvList<TapEntity>();
    entities = ProviderSoftv.Tap.GetPagedList(pageIndex, pageSize,xml);
    
    return entities ?? new SoftvList<TapEntity>();
    }


    }




    #region Customs Methods
    
    #endregion
    }
  