
using SoftvMVC.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using PagedList;
using Softv.Entities;
using Globals;

namespace SoftvMVC.Controllers
{
    /// <summary>
    /// Class                   : SoftvMVC.Controllers.CVECOLCIUController.cs
    /// Generated by            : Class Generator (c) 2015
    /// Description             : CVECOLCIUController
    /// File                    : CVECOLCIUController.cs
    /// Creation date           : 20/05/2016
    /// Creation time           : 06:39 p. m.
    ///</summary>
    public partial class CVECOLCIUController : BaseController, IDisposable
    {
        private SoftvService.CVECOLCIUClient proxy = null;

        public CVECOLCIUController()
        {

            proxy = new SoftvService.CVECOLCIUClient();

        }

        new public void Dispose()
        {
            if (proxy != null)
            {
                if (proxy.State != System.ServiceModel.CommunicationState.Closed)
                {
                    proxy.Close();
                }
            }

        }

        public ActionResult Index(int? page, int? pageSize)
        {
            PermisosAcceso("CVECOLCIU");
            ViewData["Title"] = "CVECOLCIU";
            ViewData["Message"] = "CVECOLCIU";
            int pSize = pageSize ?? SoftvMVC.Properties.Settings.Default.pagnum;
            int pageNumber = (page ?? 1);
            SoftvList<CVECOLCIUEntity> listResult = proxy.GetCVECOLCIUPagedListXml(pageNumber, pSize, SerializeTool.Serialize<CVECOLCIUEntity>(new CVECOLCIUEntity()));


            CheckNotify();
            ViewBag.CustomScriptsDefault = BuildScriptsDefault("CVECOLCIU");
            return View(new StaticPagedList<CVECOLCIUEntity>(listResult.ToList(), pageNumber, pSize, listResult.totalCount));
        }

        public ActionResult Details(int id = 0)
        {
            CVECOLCIUEntity objCVECOLCIU = proxy.GetCVECOLCIU(id);
            if (objCVECOLCIU == null)
            {
                return HttpNotFound();
            }
            return PartialView(objCVECOLCIU);
        }

        public ActionResult Create()
        {
            PermisosAccesoDeniedCreate("CVECOLCIU");
            ViewBag.CustomScriptsPageValid = BuildScriptPageValid();

            return View();
        }

        [HttpPost]
        public ActionResult Create(CVECOLCIUEntity objCVECOLCIU)
        {
            if (ModelState.IsValid)
            {

                objCVECOLCIU.BaseRemoteIp = RemoteIp;
                objCVECOLCIU.BaseIdUser = LoggedUserName;
                int result = proxy.AddCVECOLCIU(objCVECOLCIU);
                if (result == -1)
                {

                    AssingMessageScript("El CVECOLCIU ya existe en el sistema.", "error", "Error", true);
                    CheckNotify();
                    return View(objCVECOLCIU);
                }
                if (result > 0)
                {
                    AssingMessageScript("Se dio de alta el CVECOLCIU en el sistema.", "success", "Éxito", true);
                    return RedirectToAction("Index");
                }

            }
            return View(objCVECOLCIU);
        }

        public ActionResult Edit(int id = 0)
        {
            PermisosAccesoDeniedEdit("CVECOLCIU");
            ViewBag.CustomScriptsPageValid = BuildScriptPageValid();
            CVECOLCIUEntity objCVECOLCIU = proxy.GetCVECOLCIU(id);

            if (objCVECOLCIU == null)
            {
                return HttpNotFound();
            }
            return View(objCVECOLCIU);
        }

        //
        // POST: /CVECOLCIU/Edit/5
        [HttpPost]
        public ActionResult Edit(CVECOLCIUEntity objCVECOLCIU)
        {
            if (ModelState.IsValid)
            {
                objCVECOLCIU.BaseRemoteIp = RemoteIp;
                objCVECOLCIU.BaseIdUser = LoggedUserName;
                int result = proxy.UpdateCVECOLCIU(objCVECOLCIU);
                if (result == -1)
                {
                    CVECOLCIUEntity objCVECOLCIUOld = proxy.GetCVECOLCIU(objCVECOLCIU.Clv_Ciudad);

                    AssingMessageScript("El CVECOLCIU ya existe en el sistema, .", "error", "Error", true);
                    CheckNotify();
                    return View(objCVECOLCIU);
                }
                if (result > 0)
                {
                    AssingMessageScript("El CVECOLCIU se modifico en el sistema.", "success", "Éxito", true);
                    CheckNotify();
                    return RedirectToAction("Index");
                }
                return RedirectToAction("Index");
            }
            return View(objCVECOLCIU);
        }

        public ActionResult QuickIndex(int? page, int? pageSize, int? Clv_Ciudad)
        {
            int pageNumber = (page ?? 1);
            int pSize = pageSize ?? SoftvMVC.Properties.Settings.Default.pagnum;
            SoftvList<CVECOLCIUEntity> listResult = null;
            List<CVECOLCIUEntity> listCVECOLCIU = new List<CVECOLCIUEntity>();
            CVECOLCIUEntity objCVECOLCIU = new CVECOLCIUEntity();
            CVECOLCIUEntity objGetCVECOLCIU = new CVECOLCIUEntity();


            if ((Clv_Ciudad != null && Clv_Ciudad.ToString() != ""))
            {
                objCVECOLCIU.Clv_Ciudad = Clv_Ciudad;
            }



            pageNumber = pageNumber == 0 ? 1 : pageNumber;
            listResult = proxy.GetCVECOLCIUPagedListXml(pageNumber, pSize, Globals.SerializeTool.Serialize(objCVECOLCIU));
            if (listResult.Count == 0)
            {
                int tempPageNumber = (int)(listResult.totalCount / pSize);
                pageNumber = (int)(listResult.totalCount / pSize) == 0 ? 1 : tempPageNumber;
                listResult = proxy.GetCVECOLCIUPagedListXml(pageNumber, pSize, Globals.SerializeTool.Serialize(objCVECOLCIU));
            }
            listResult.ToList().ForEach(x => listCVECOLCIU.Add(x));

            var CVECOLCIUAsIPagedList = new StaticPagedList<CVECOLCIUEntity>(listCVECOLCIU, pageNumber, pSize, listResult.totalCount);
            if (CVECOLCIUAsIPagedList.Count > 0)
            {
                return PartialView(CVECOLCIUAsIPagedList);
            }
            else
            {
                var result = new { tipomsj = "warning", titulomsj = "Aviso", Success = "False", Message = "No se encontraron registros con los criterios de búsqueda ingresados." };
                return Json(result, JsonRequestBehavior.AllowGet);
            }
        }

        public ActionResult Delete(int id = 0)
        {
            int result = proxy.DeleteCVECOLCIU(id);
            if (result > 0)
            {
                var resultOk = new { tipomsj = "success", titulomsj = "Aviso", Success = "True", Message = "Registro de CVECOLCIU Eliminado." };
                return Json(resultOk, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var resultNg = new { tipomsj = "warning", titulomsj = "Aviso", Success = "False", Message = "El Registro de CVECOLCIU No puede ser Eliminado validar dependencias." };
                return Json(resultNg, JsonRequestBehavior.AllowGet);
            }
        }


    }

}

