
using SoftvMVC.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using PagedList;
using Softv.Entities;
using Globals;
using System.Data.SqlClient;

namespace SoftvMVC.Controllers
{
    /// <summary>
    /// Class                   : SoftvMVC.Controllers.CIUDADController.cs
    /// Generated by            : Class Generator (c) 2015
    /// Description             : CIUDADController
    /// File                    : CIUDADController.cs
    /// Creation date           : 20/05/2016
    /// Creation time           : 06:40 p. m.
    ///</summary>
    public partial class CIUDADController : BaseController, IDisposable
    {
        private SoftvService.CIUDADClient proxy = null;

        public CIUDADController()
        {

            proxy = new SoftvService.CIUDADClient();

        }

        new public void Dispose()
        {
            if (proxy != null)
            {
                if (proxy.State != System.ServiceModel.CommunicationState.Closed)
                {
                    proxy.Close();
                }
            }

        }

        public ActionResult Index(int? page, int? pageSize)
        {
            PermisosAcceso("CIUDAD");
            ViewData["Title"] = "CIUDAD";
            ViewData["Message"] = "CIUDAD";
            int pSize = pageSize ?? SoftvMVC.Properties.Settings.Default.pagnum;
            int pageNumber = (page ?? 1);
            SoftvList<CIUDADEntity> listResult = proxy.GetCIUDADPagedListXml(pageNumber, pSize, SerializeTool.Serialize<CIUDADEntity>(new CIUDADEntity()));


            CheckNotify();
            ViewBag.CustomScriptsDefault = BuildScriptsDefault("CIUDAD");
            return View(new StaticPagedList<CIUDADEntity>(listResult.ToList(), pageNumber, pSize, listResult.totalCount));
        }

        public ActionResult GetCiudadByPlaza(int plaza){
             ConexionController c = new ConexionController();
            SqlCommand comandoSql;
            
            List<CIUDADEntity> lista = new List<CIUDADEntity>();
            SqlConnection conexionSQL = new SqlConnection(c.DameConexion(plaza));
            try
            {
                conexionSQL.Open();
            }
            catch
            { }
              comandoSql = new SqlCommand("SELECT * FROM CIUDADES");
            
            
            comandoSql.Connection = conexionSQL;
            SqlDataReader reader = comandoSql.ExecuteReader();
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    CIUDADEntity ciudad = new CIUDADEntity();
                    ciudad.Clv_Ciudad=
                    ciudad.Nombre=
                }
            }


            return null;
        }
       

     

        



    }

}

