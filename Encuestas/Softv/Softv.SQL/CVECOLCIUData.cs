
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.Linq;
using System.Data.SqlClient;
using Softv.Entities;
using Softv.Providers;
using SoftvConfiguration;
using Globals;

namespace Softv.DAO
{
    /// <summary>
    /// Class                   : Softv.DAO.CVECOLCIUData
    /// Generated by            : Class Generator (c) 2014
    /// Description             : CVECOLCIU Data Access Object
    /// File                    : CVECOLCIUDAO.cs
    /// Creation date           : 20/05/2016
    /// Creation time           : 06:39 p. m.
    ///</summary>
    public class CVECOLCIUData : CVECOLCIUProvider
    {
        /// <summary>
        ///</summary>
        /// <param name="CVECOLCIU"> Object CVECOLCIU added to List</param>
        public override int AddCVECOLCIU(CVECOLCIUEntity entity_CVECOLCIU)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CVECOLCIU.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CVECOLCIUAdd", connection);

                AssingParameter(comandoSql, "@Clv_Colonia", null, pd: ParameterDirection.Output, IsKey: true);

                AssingParameter(comandoSql, "@Clv_Ciudad", null, pd: ParameterDirection.Output, IsKey: true);

                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = ExecuteNonQuery(comandoSql);
                }
                catch (Exception ex)
                {
                    throw new Exception("Error adding CVECOLCIU " + ex.Message, ex);
                }
                finally
                {
                    connection.Close();
                }
                result = (int)comandoSql.Parameters["@IdCVECOLCIU"].Value;
            }
            return result;
        }

        /// <summary>
        /// Deletes a CVECOLCIU
        ///</summary>
        /// <param name="">  Clv_Colonia,Clv_Ciudad to delete </param>
        public override int DeleteCVECOLCIU(int? Clv_Ciudad)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CVECOLCIU.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CVECOLCIUDelete", connection);


                AssingParameter(comandoSql, "@Clv_Ciudad", Clv_Ciudad);

                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = ExecuteNonQuery(comandoSql);
                }
                catch (Exception ex)
                {
                    throw new Exception("Error deleting CVECOLCIU " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }

        /// <summary>
        /// Edits a CVECOLCIU
        ///</summary>
        /// <param name="CVECOLCIU"> Objeto CVECOLCIU a editar </param>
        public override int EditCVECOLCIU(CVECOLCIUEntity entity_CVECOLCIU)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CVECOLCIU.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CVECOLCIUEdit", connection);

                AssingParameter(comandoSql, "@Clv_Colonia", entity_CVECOLCIU.Clv_Colonia);

                AssingParameter(comandoSql, "@Clv_Ciudad", entity_CVECOLCIU.Clv_Ciudad);

                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();

                    result = int.Parse(ExecuteNonQuery(comandoSql).ToString());

                }
                catch (Exception ex)
                {
                    throw new Exception("Error updating CVECOLCIU " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }

        /// <summary>
        /// Gets all CVECOLCIU
        ///</summary>
        public override List<CVECOLCIUEntity> GetCVECOLCIU()
        {
            List<CVECOLCIUEntity> CVECOLCIUList = new List<CVECOLCIUEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CVECOLCIU.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CVECOLCIUGet", connection);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        CVECOLCIUList.Add(GetCVECOLCIUFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CVECOLCIU " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return CVECOLCIUList;
        }

        /// <summary>
        /// Gets all CVECOLCIU by List<int>
        ///</summary>
        public override List<CVECOLCIUEntity> GetCVECOLCIU(List<int> lid)
        {
            List<CVECOLCIUEntity> CVECOLCIUList = new List<CVECOLCIUEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CVECOLCIU.ConnectionString))
            {
                DataTable IdDT = BuildTableID(lid);

                SqlCommand comandoSql = CreateCommand("Softv_CVECOLCIUGetByIds", connection);
                AssingParameter(comandoSql, "@IdTable", IdDT);

                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        CVECOLCIUList.Add(GetCVECOLCIUFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CVECOLCIU " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return CVECOLCIUList;
        }

        /// <summary>
        /// Gets CVECOLCIU by
        ///</summary>
        public override CVECOLCIUEntity GetCVECOLCIUById(int? Clv_Ciudad)
        {
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CVECOLCIU.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CVECOLCIUGetById", connection);
                CVECOLCIUEntity entity_CVECOLCIU = null;


                AssingParameter(comandoSql, "@Clv_Ciudad", Clv_Ciudad);

                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql, CommandBehavior.SingleRow);
                    if (rd.Read())
                        entity_CVECOLCIU = GetCVECOLCIUFromReader(rd);
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CVECOLCIU " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
                return entity_CVECOLCIU;
            }

        }
















        public override CVECOLCIUEntity GetCVECOLCIUByCiudad(int? Clv_Ciudad)
        {
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CVECOLCIU.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_", connection);
                CVECOLCIUEntity entity_CVECOLCIU = null;


                AssingParameter(comandoSql, "@Clv_Ciudad", Clv_Ciudad);

                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql, CommandBehavior.SingleRow);
                    if (rd.Read())
                        entity_CVECOLCIU = GetCVECOLCIUFromReader(rd);
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CVECOLCIU " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
                return entity_CVECOLCIU;
            }

        }






























        public override List<CVECOLCIUEntity> GetCVECOLCIUByClv_Colonia(int? Clv_Colonia)
        {
            List<CVECOLCIUEntity> CVECOLCIUList = new List<CVECOLCIUEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CVECOLCIU.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CVECOLCIUGetByClv_Colonia", connection);

                AssingParameter(comandoSql, "@Clv_Colonia", Clv_Colonia);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        CVECOLCIUList.Add(GetCVECOLCIUFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CVECOLCIU " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return CVECOLCIUList;
        }

        public override List<CVECOLCIUEntity> GetCVECOLCIUByClv_Ciudad(int? Clv_Ciudad)
        {
            List<CVECOLCIUEntity> CVECOLCIUList = new List<CVECOLCIUEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CVECOLCIU.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CVECOLCIUGetByClv_Ciudad", connection);

                AssingParameter(comandoSql, "@Clv_Ciudad", Clv_Ciudad);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        CVECOLCIUList.Add(GetCVECOLCIUFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CVECOLCIU " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return CVECOLCIUList;
        }


        /// <summary>
        ///Get CVECOLCIU
        ///</summary>
        public override SoftvList<CVECOLCIUEntity> GetPagedList(int pageIndex, int pageSize)
        {
            SoftvList<CVECOLCIUEntity> entities = new SoftvList<CVECOLCIUEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CVECOLCIU.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CVECOLCIUGetPaged", connection);

                AssingParameter(comandoSql, "@pageIndex", pageIndex);
                AssingParameter(comandoSql, "@pageSize", pageSize);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);
                    while (rd.Read())
                    {
                        entities.Add(GetCVECOLCIUFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CVECOLCIU " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
                entities.totalCount = GetCVECOLCIUCount();
                return entities ?? new SoftvList<CVECOLCIUEntity>();
            }
        }

        /// <summary>
        ///Get CVECOLCIU
        ///</summary>
        public override SoftvList<CVECOLCIUEntity> GetPagedList(int pageIndex, int pageSize, String xml)
        {
            SoftvList<CVECOLCIUEntity> entities = new SoftvList<CVECOLCIUEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CVECOLCIU.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CVECOLCIUGetPagedXml", connection);

                AssingParameter(comandoSql, "@pageSize", pageSize);
                AssingParameter(comandoSql, "@pageIndex", pageIndex);
                AssingParameter(comandoSql, "@xml", xml);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);
                    while (rd.Read())
                    {
                        entities.Add(GetCVECOLCIUFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CVECOLCIU " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
                entities.totalCount = GetCVECOLCIUCount(xml);
                return entities ?? new SoftvList<CVECOLCIUEntity>();
            }
        }

        /// <summary>
        ///Get Count CVECOLCIU
        ///</summary>
        public int GetCVECOLCIUCount()
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CVECOLCIU.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CVECOLCIUGetCount", connection);
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = (int)ExecuteScalar(comandoSql);


                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CVECOLCIU " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }


        /// <summary>
        ///Get Count CVECOLCIU
        ///</summary>
        public int GetCVECOLCIUCount(String xml)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CVECOLCIU.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CVECOLCIUGetCountXml", connection);

                AssingParameter(comandoSql, "@xml", xml);
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = (int)ExecuteScalar(comandoSql);


                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CVECOLCIU " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }

        #region Customs Methods

        #endregion
    }
}
