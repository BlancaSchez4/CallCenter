
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.Linq;
using System.Data.SqlClient;
using Softv.Entities;
using Softv.Providers;
using SoftvConfiguration;
using Globals;

namespace Softv.DAO
{
    /// <summary>
    /// Class                   : Softv.DAO.CALLEData
    /// Generated by            : Class Generator (c) 2014
    /// Description             : CALLE Data Access Object
    /// File                    : CALLEDAO.cs
    /// Creation date           : 20/05/2016
    /// Creation time           : 06:40 p. m.
    ///</summary>
    public class CALLEData : CALLEProvider
    {
        /// <summary>
        ///</summary>
        /// <param name="CALLE"> Object CALLE added to List</param>
        public override int AddCALLE(CALLEEntity entity_CALLE)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CALLE.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CALLEAdd", connection);

                AssingParameter(comandoSql, "@Clv_Calle", null, pd: ParameterDirection.Output, IsKey: true);

                AssingParameter(comandoSql, "@Nombre", entity_CALLE.Nombre);

                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = ExecuteNonQuery(comandoSql);
                }
                catch (Exception ex)
                {
                    throw new Exception("Error adding CALLE " + ex.Message, ex);
                }
                finally
                {
                    connection.Close();
                }
                result = (int)comandoSql.Parameters["@Clv_Calle"].Value;
            }
            return result;
        }

        /// <summary>
        /// Deletes a CALLE
        ///</summary>
        /// <param name="">  Clv_Calle to delete </param>
        public override int DeleteCALLE(int? Clv_Calle)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CALLE.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CALLEDelete", connection);

                AssingParameter(comandoSql, "@Clv_Calle", Clv_Calle);

                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = ExecuteNonQuery(comandoSql);
                }
                catch (Exception ex)
                {
                    throw new Exception("Error deleting CALLE " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }

        /// <summary>
        /// Edits a CALLE
        ///</summary>
        /// <param name="CALLE"> Objeto CALLE a editar </param>
        public override int EditCALLE(CALLEEntity entity_CALLE)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CALLE.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CALLEEdit", connection);

                AssingParameter(comandoSql, "@Clv_Calle", entity_CALLE.Clv_Calle);

                AssingParameter(comandoSql, "@Nombre", entity_CALLE.Nombre);

                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();

                    result = int.Parse(ExecuteNonQuery(comandoSql).ToString());

                }
                catch (Exception ex)
                {
                    throw new Exception("Error updating CALLE " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }

        /// <summary>
        /// Gets all CALLE
        ///</summary>
        public override List<CALLEEntity> GetCALLE()
        {
            List<CALLEEntity> CALLEList = new List<CALLEEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CALLE.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CALLEGet", connection);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        CALLEList.Add(GetCALLEFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CALLE " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return CALLEList;
        }

        /// <summary>
        /// Gets all CALLE by List<int>
        ///</summary>
        public override List<CALLEEntity> GetCALLE(List<int> lid)
        {
            List<CALLEEntity> CALLEList = new List<CALLEEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CALLE.ConnectionString))
            {
                DataTable IdDT = BuildTableID(lid);

                SqlCommand comandoSql = CreateCommand("Softv_CALLEGetByIds", connection);
                AssingParameter(comandoSql, "@IdTable", IdDT);

                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        CALLEList.Add(GetCALLEFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CALLE " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return CALLEList;
        }

        /// <summary>
        /// Gets CALLE by
        ///</summary>
        public override CALLEEntity GetCALLEById(int? Clv_Calle)
        {
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CALLE.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CALLEGetById", connection);
                CALLEEntity entity_CALLE = null;


                AssingParameter(comandoSql, "@Clv_Calle", Clv_Calle);

                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql, CommandBehavior.SingleRow);
                    if (rd.Read())
                        entity_CALLE = GetCALLEFromReader(rd);
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CALLE " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
                return entity_CALLE;
            }

        }


        public override List<CALLEEntity> GetCALLEByClv_Calle(int? Clv_Calle)
        {
            List<CALLEEntity> CALLEList = new List<CALLEEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CALLE.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CALLEGetByClv_Calle", connection);

                AssingParameter(comandoSql, "@Clv_Calle", Clv_Calle);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        CALLEList.Add(GetCALLEFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CALLE " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return CALLEList;
        }


        public override List<CALLEEntity> GetCALLEByIdCalle(int? Clv_Calle)
        {
            List<CALLEEntity> CALLEList = new List<CALLEEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CALLE.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CALLEGetByIdCalle", connection);

                AssingParameter(comandoSql, "@Clv_Calle", Clv_Calle);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        CALLEList.Add(GetCALLEFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CALLE " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return CALLEList;
        }


        /// <summary>
        ///Get CALLE
        ///</summary>
        public override SoftvList<CALLEEntity> GetPagedList(int pageIndex, int pageSize)
        {
            SoftvList<CALLEEntity> entities = new SoftvList<CALLEEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CALLE.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CALLEGetPaged", connection);

                AssingParameter(comandoSql, "@pageIndex", pageIndex);
                AssingParameter(comandoSql, "@pageSize", pageSize);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);
                    while (rd.Read())
                    {
                        entities.Add(GetCALLEFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CALLE " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
                entities.totalCount = GetCALLECount();
                return entities ?? new SoftvList<CALLEEntity>();
            }
        }

        /// <summary>
        ///Get CALLE
        ///</summary>
        public override SoftvList<CALLEEntity> GetPagedList(int pageIndex, int pageSize, String xml)
        {
            SoftvList<CALLEEntity> entities = new SoftvList<CALLEEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CALLE.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CALLEGetPagedXml", connection);

                AssingParameter(comandoSql, "@pageSize", pageSize);
                AssingParameter(comandoSql, "@pageIndex", pageIndex);
                AssingParameter(comandoSql, "@xml", xml);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);
                    while (rd.Read())
                    {
                        entities.Add(GetCALLEFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CALLE " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
                entities.totalCount = GetCALLECount(xml);
                return entities ?? new SoftvList<CALLEEntity>();
            }
        }

        /// <summary>
        ///Get Count CALLE
        ///</summary>
        public int GetCALLECount()
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CALLE.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CALLEGetCount", connection);
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = (int)ExecuteScalar(comandoSql);


                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CALLE " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }


        /// <summary>
        ///Get Count CALLE
        ///</summary>
        public int GetCALLECount(String xml)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.CALLE.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_CALLEGetCountXml", connection);

                AssingParameter(comandoSql, "@xml", xml);
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = (int)ExecuteScalar(comandoSql);


                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data CALLE " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }

        #region Customs Methods

        #endregion
    }
}
