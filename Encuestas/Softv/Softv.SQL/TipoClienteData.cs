
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Data;
    using System.Linq;
    using System.Data.SqlClient;
    using Softv.Entities;
    using Softv.Providers;
    using SoftvConfiguration;
    using Globals;

    namespace Softv.DAO
    {
    /// <summary>
    /// Class                   : Softv.DAO.TipoClienteData
    /// Generated by            : Class Generator (c) 2014
    /// Description             : TipoCliente Data Access Object
    /// File                    : TipoClienteDAO.cs
    /// Creation date           : 04/05/2016
    /// Creation time           : 01:29 p. m.
    ///</summary>
    public class TipoClienteData : TipoClienteProvider
    {
    /// <summary>
    ///</summary>
    /// <param name="TipoCliente"> Object TipoCliente added to List</param>
    public override int AddTipoCliente(TipoClienteEntity entity_TipoCliente)
    {
    int result=0;
    using(SqlConnection connection = new SqlConnection(SoftvSettings.Settings.TipoCliente.ConnectionString))
    {
    
    SqlCommand comandoSql = CreateCommand("Softv_TipoClienteAdd", connection);
    
        AssingParameter(comandoSql, "@Clv_TipoCliente", null, pd: ParameterDirection.Output, IsKey: true);
      
            AssingParameter(comandoSql,"@Descripcion",entity_TipoCliente.Descripcion);
          
    try
    {
    if (connection.State == ConnectionState.Closed)
    connection.Open();
    result = ExecuteNonQuery(comandoSql);
    }
    catch (Exception ex)
    {
    throw new Exception("Error adding TipoCliente " + ex.Message, ex);
    }
    finally
    {
    connection.Close();
    }
    result = (int)comandoSql.Parameters["@IdTipoCliente"].Value;
    }
    return result;
    }

    /// <summary>
    /// Deletes a TipoCliente
    ///</summary>
    /// <param name="">  Clv_TipoCliente to delete </param>
    public override int DeleteTipoCliente(int? Clv_TipoCliente)
    {
    int result=0;
    using(SqlConnection connection = new SqlConnection(SoftvSettings.Settings.TipoCliente.ConnectionString))
    {
    
    SqlCommand comandoSql = CreateCommand("Softv_TipoClienteDelete", connection);
    
            AssingParameter(comandoSql,"@Clv_TipoCliente",Clv_TipoCliente);
          
    try
    {
    if (connection.State == ConnectionState.Closed)
    connection.Open();
    result = ExecuteNonQuery(comandoSql);
    }
    catch (Exception ex)
    {
    throw new Exception("Error deleting TipoCliente " + ex.Message, ex);
    }
    finally
    {
    if(connection != null)
    connection.Close();
    }
    }
    return result;
    }

    /// <summary>
    /// Edits a TipoCliente
    ///</summary>
    /// <param name="TipoCliente"> Objeto TipoCliente a editar </param>
    public override int EditTipoCliente(TipoClienteEntity entity_TipoCliente)
    {
    int result=0;
    using(SqlConnection connection = new SqlConnection(SoftvSettings.Settings.TipoCliente.ConnectionString))
    {
    
    SqlCommand comandoSql = CreateCommand("Softv_TipoClienteEdit", connection);
    
            AssingParameter(comandoSql,"@Clv_TipoCliente",entity_TipoCliente.Clv_TipoCliente);
          
            AssingParameter(comandoSql,"@Descripcion",entity_TipoCliente.Descripcion);
          
    try
    {
    if (connection.State == ConnectionState.Closed)
    connection.Open();
    
        result = int.Parse(ExecuteNonQuery(comandoSql).ToString());
          
    }
    catch (Exception ex)
    {
    throw new Exception("Error updating TipoCliente " + ex.Message, ex);
    }
    finally
    {
    if(connection != null)
    connection.Close();
    }
    }
    return result;
    }

    /// <summary>
    /// Gets all TipoCliente
    ///</summary>
    public override List<TipoClienteEntity> GetTipoCliente()
    {
    List<TipoClienteEntity> TipoClienteList = new List<TipoClienteEntity>();
    using(SqlConnection connection = new SqlConnection(SoftvSettings.Settings.TipoCliente.ConnectionString))
    {
    
    SqlCommand comandoSql = CreateCommand("Softv_TipoClienteGet", connection);
    IDataReader rd = null;
    try
    {
    if (connection.State == ConnectionState.Closed)
    connection.Open();
    rd = ExecuteReader(comandoSql);

    while (rd.Read())
    {
    TipoClienteList.Add(GetTipoClienteFromReader(rd));
    }
    }
    catch (Exception ex)
    {
    throw new Exception("Error getting data TipoCliente "  + ex.Message, ex);
    }
    finally
    {
    if(connection!=null)
    connection.Close();
    if(rd != null)
    rd.Close();
    }
    }
    return TipoClienteList;
    }

    /// <summary>
    /// Gets all TipoCliente by List<int>
    ///</summary>
    public override List<TipoClienteEntity> GetTipoCliente(List<int> lid)
    {
    List<TipoClienteEntity> TipoClienteList = new List<TipoClienteEntity>();
    using(SqlConnection connection = new SqlConnection(SoftvSettings.Settings.TipoCliente.ConnectionString))
    {
    DataTable IdDT = BuildTableID(lid);
    
    SqlCommand comandoSql = CreateCommand("Softv_TipoClienteGetByIds", connection);
    AssingParameter(comandoSql, "@IdTable", IdDT);
    
    IDataReader rd = null;
    try
    {
    if (connection.State == ConnectionState.Closed)
    connection.Open();
    rd = ExecuteReader(comandoSql);

    while (rd.Read())
    {
    TipoClienteList.Add(GetTipoClienteFromReader(rd));
    }
    }
    catch (Exception ex)
    {
    throw new Exception("Error getting data TipoCliente "  + ex.Message, ex);
    }
    finally
    {
    if(connection!=null)
    connection.Close();
    if(rd != null)
    rd.Close();
    }
    }
    return TipoClienteList;
    }

    /// <summary>
    /// Gets TipoCliente by
    ///</summary>
    public override TipoClienteEntity GetTipoClienteById(int? Clv_TipoCliente)
    {
    using(SqlConnection connection = new SqlConnection(SoftvSettings.Settings.TipoCliente.ConnectionString))
    {
    
    SqlCommand comandoSql = CreateCommand("Softv_TipoClienteGetById", connection);
    TipoClienteEntity entity_TipoCliente = null;

    
            AssingParameter(comandoSql,"@Clv_TipoCliente", Clv_TipoCliente);
          
    IDataReader rd = null;
    try
    {
    if (connection.State == ConnectionState.Closed)
    connection.Open();
    rd = ExecuteReader(comandoSql, CommandBehavior.SingleRow);
    if (rd.Read())
    entity_TipoCliente = GetTipoClienteFromReader(rd);
    }
    catch (Exception ex)
    {
    throw new Exception("Error getting data TipoCliente "  + ex.Message, ex);
    }
    finally
    {
    if(connection!=null)
    connection.Close();
    if(rd != null)
    rd.Close();
    }
    return entity_TipoCliente;
    }

    }

    
          public override List<TipoClienteEntity> GetTipoClienteByClv_TipoCliente(int? Clv_TipoCliente)
          {
          List<TipoClienteEntity> TipoClienteList = new List<TipoClienteEntity>();
          using(SqlConnection connection = new SqlConnection(SoftvSettings.Settings.TipoCliente.ConnectionString))
          {
          
          SqlCommand comandoSql = CreateCommand("Softv_TipoClienteGetByClv_TipoCliente", connection);
          
          AssingParameter(comandoSql, "@Clv_TipoCliente", Clv_TipoCliente);
          IDataReader rd = null;
          try
          {
          if (connection.State == ConnectionState.Closed)
          connection.Open();
          rd = ExecuteReader(comandoSql);

          while (rd.Read())
          {
          TipoClienteList.Add(GetTipoClienteFromReader(rd));
          }
          }
          catch (Exception ex)
          {
          throw new Exception("Error getting data TipoCliente "  + ex.Message, ex);
          }
          finally
          {
          if(connection!=null)
          connection.Close();
          if(rd != null)
          rd.Close();
          }
          }
          return TipoClienteList;
          }
        

    /// <summary>
    ///Get TipoCliente
    ///</summary>
    public override SoftvList<TipoClienteEntity> GetPagedList(int pageIndex, int pageSize)
    {
    SoftvList<TipoClienteEntity> entities = new SoftvList<TipoClienteEntity>();
    using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.TipoCliente.ConnectionString))
    {
    
    SqlCommand comandoSql = CreateCommand("Softv_TipoClienteGetPaged", connection);
    
    AssingParameter(comandoSql,"@pageIndex", pageIndex);
    AssingParameter(comandoSql,"@pageSize", pageSize);
    IDataReader rd = null;
    try
    {
    if (connection.State == ConnectionState.Closed)
    connection.Open();
    rd = ExecuteReader(comandoSql);
    while (rd.Read())
    {
    entities.Add(GetTipoClienteFromReader(rd));
    }
    }
    catch (Exception ex)
    {
    throw new Exception("Error getting data TipoCliente " + ex.Message, ex);
    }
    finally
    {
    if (connection != null)
    connection.Close();
    if (rd != null)
    rd.Close();
    }
    entities.totalCount = GetTipoClienteCount();
    return entities ?? new SoftvList<TipoClienteEntity>();
    }
    }

    /// <summary>
    ///Get TipoCliente
    ///</summary>
    public override SoftvList<TipoClienteEntity> GetPagedList(int pageIndex, int pageSize,String xml)
    {
    SoftvList<TipoClienteEntity> entities = new SoftvList<TipoClienteEntity>();
    using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.TipoCliente.ConnectionString))
    {
    
    SqlCommand comandoSql = CreateCommand("Softv_TipoClienteGetPagedXml", connection);
    
    AssingParameter(comandoSql,"@pageSize", pageSize);
    AssingParameter(comandoSql,"@pageIndex", pageIndex);
    AssingParameter(comandoSql,"@xml", xml);
    IDataReader rd = null;
    try
    {
    if (connection.State == ConnectionState.Closed)
    connection.Open();
    rd = ExecuteReader(comandoSql);
    while (rd.Read())
    {
    entities.Add(GetTipoClienteFromReader(rd));
    }
    }
    catch (Exception ex)
    {
    throw new Exception("Error getting data TipoCliente " + ex.Message, ex);
    }
    finally
    {
    if (connection != null)
    connection.Close();
    if (rd != null)
    rd.Close();
    }
    entities.totalCount = GetTipoClienteCount(xml);
    return entities ?? new SoftvList<TipoClienteEntity>();
    }
    }

    /// <summary>
    ///Get Count TipoCliente
    ///</summary>
    public int GetTipoClienteCount()
    {
    int result = 0;
    using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.TipoCliente.ConnectionString))
    {
    
    SqlCommand comandoSql = CreateCommand("Softv_TipoClienteGetCount", connection);
    try
    {
    if (connection.State == ConnectionState.Closed)
    connection.Open();
    result = (int)ExecuteScalar(comandoSql);


    }
    catch (Exception ex)
    {
    throw new Exception("Error getting data TipoCliente " + ex.Message, ex);
    }
    finally
    {
    if (connection != null)
    connection.Close();
    }
    }
    return result;
    }


    /// <summary>
    ///Get Count TipoCliente
    ///</summary>
    public int GetTipoClienteCount(String xml)
    {
    int result = 0;
    using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.TipoCliente.ConnectionString))
    {
    
    SqlCommand comandoSql = CreateCommand("Softv_TipoClienteGetCountXml", connection);
    
    AssingParameter(comandoSql,"@xml", xml);
    try
    {
    if (connection.State == ConnectionState.Closed)
    connection.Open();
    result = (int)ExecuteScalar(comandoSql);


    }
    catch (Exception ex)
    {
    throw new Exception("Error getting data TipoCliente " + ex.Message, ex);
    }
    finally
    {
    if (connection != null)
    connection.Close();
    }
    }
    return result;
    }

    #region Customs Methods
    
    #endregion
    }
    }
  